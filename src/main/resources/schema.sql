DROP TABLE IF EXISTS TASK;
DROP TABLE IF EXISTS TODOLIST;
DROP TABLE IF EXISTS USER_ROLES;
DROP TABLE IF EXISTS USER_ACCOUNT;

CREATE TABLE IF NOT EXISTS USER_ACCOUNT (
  USER_ID UUID PRIMARY KEY,
  USER_USERNAME VARCHAR(255) NOT NULL,
  USER_PASSWORD VARCHAR(255) NOT NULL,
  USER_ACCOUNT_DUE_TIME TIMESTAMP NOT NULL,
  USER_ACCOUNT_NON_LOCKED BOOLEAN NOT NULL,
  USER_CREDENTIALS_DUE_TIME TIMESTAMP NOT NULL,
  USER_ENABLED BOOLEAN NOT NULL,
  USER_EMAIL VARCHAR(255) NOT NULL,
  USER_CREATED_AT TIMESTAMP NOT NULL,
  USER_UPDATED_AT TIMESTAMP NOT NULL
);

CREATE TABLE IF NOT EXISTS USER_ROLES (
  USER_ID UUID NOT NULL,
  USER_ROLE VARCHAR(255) NOT NULL,
  PRIMARY KEY (USER_ID, USER_ROLE),
  FOREIGN KEY (USER_ID) REFERENCES USER_ACCOUNT(USER_ID)
);

CREATE TABLE IF NOT EXISTS TODOLIST (
  TODOLIST_ID UUID PRIMARY KEY,
  TODOLIST_TITLE VARCHAR(255) NOT NULL,
  TODOLIST_DESCRIPTION VARCHAR(255) NOT NULL,
  USER_ID UUID NOT NULL,
  FOREIGN KEY (USER_ID) REFERENCES USER_ACCOUNT(USER_ID)
);

CREATE TABLE IF NOT EXISTS TASK (
  TASK_ID UUID PRIMARY KEY,
  TASK_TITLE VARCHAR(255) NOT NULL,
  TASK_DESCRIPTION VARCHAR(255) NOT NULL,
  TASK_CHECKED BOOLEAN NOT NULL,
  TASK_DUE_DATE TIMESTAMP,
  TODOLIST_ID UUID NOT NULL,
  FOREIGN KEY (TODOLIST_ID) REFERENCES TODOLIST(TODOLIST_ID)
);